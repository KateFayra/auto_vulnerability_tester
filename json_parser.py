import json

class json_object():
    def __init__(self):
        self.data = {'hosts': []}  # begin building the JSON data object
    def add_host(self, host):
        self.data['hosts'].append(host)



def save_json(data, filename):
    """
    Saves the graph to a JSON file
    :param graph: The graph
    :param filename: Name of the file to write to
    """
    try:  # save JSON file
        file = open(filename, "w")
    except OSError:
        return False
    file.write(json.dumps(data, sort_keys=True, indent=4, separators=(',', ': ')))
    file.close()
    print("Data saved to " + filename)
    return True
    


def parse_json(filename):
    """
    Parses a correctly formatted JSON file and returns a graph.
    :param filename: The path to the JSON file
    :return: Graph directed graph, False on failure
    """
    json_data = json_object()

    try:
        fp = open(filename)
    except FileNotFoundError:
        return False

    try:
        data = json.load(fp)
    except ValueError:
        return False
    fp.close()
    json_data.data = data
    return json_data



# def merge_json(graph, filename):
#     """
#     Merge a new JSON file into the graph
#     :param graph: The graph
#     :param filename: new JSON file.
#     :return: True on success, false otherwise
#     """
#     other_graph = parse_json(filename)
#     if other_graph is False:
#         print("Could not load data, " + filename + " does not exist.")
#         return False

#     graph.merge(other_graph)
#     print("Merged " + filename + " into current data.")
#     return True